name: Messages Workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Sender name'
        required: false
        type: string
        default: 'Anonymous'
      text:
        description: 'Message text'
        required: true
        type: string
      email:
        description: 'Sender email'
        required: false
        type: string
      priority:
        description: 'Message priority'
        required: false
        type: string
        default: 'normal'
      category:
        description: 'Message category'
        required: false
        type: string
        default: 'general'

jobs:
  add-message:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Verify jq is available
      run: |
        if ! command -v jq &> /dev/null; then
          echo "Installing jq..."
          sudo apt-get update && sudo apt-get install -y jq
        fi
        jq --version
        echo "jq is available for JSON manipulation"
      
    - name: Add new message
      run: |
        # Read existing data or create default structure
        if [ -f "inex-live-data.json" ]; then
          echo "Reading existing inex-live-data.json..."
          existing_data=$(cat inex-live-data.json)
        else
          echo "Creating new inex-live-data.json..."
          existing_data='{}'
        fi
        
        # Create new message object
        new_message=$(jq -n \
          --arg name "${{ inputs.name }}" \
          --arg text "${{ inputs.text }}" \
          --arg email "${{ inputs.email || '' }}" \
          --arg priority "${{ inputs.priority }}" \
          --arg category "${{ inputs.category }}" \
          --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          --arg now "$(date +%s)000" \
          '{
            id: $now,
            name: $name,
            text: $text,
            email: $email,
            priority: $priority,
            category: $category,
            timestamp: $timestamp,
            status: "new",
            read: false,
            responded: false
          }')
        
        # Add new message to beginning of messages array
        if echo "$existing_data" | jq -e '.messages' > /dev/null 2>&1; then
          # Messages array exists, add to beginning
          echo "Adding message to existing messages array..."
          updated_data=$(echo "$existing_data" | jq --argjson msg "$new_message" '.messages |= [$msg] + .')
        else
          # No messages array, create it with the new message
          echo "Creating new messages array with first message..."
          updated_data=$(echo "$existing_data" | jq --argjson msg "$new_message" '.messages = [$msg]')
        fi
        
        # Update lastUpdated timestamp
        updated_data=$(echo "$updated_data" | jq --arg lastUpdated "$(date -u +%Y-%m-%dT%H:%M:%SZ)" '.lastUpdated = $lastUpdated')
        
        # Write the updated data back to file
        echo "$updated_data" > inex-live-data.json
        
        # Validate the JSON file was created correctly
        if [ -f "inex-live-data.json" ]; then
          echo "✅ inex-live-data.json updated successfully"
          echo "📝 Message count: $(jq '.messages | length' inex-live-data.json)"
          echo "📄 File size: $(wc -c < inex-live-data.json) bytes"
          
          # Validate JSON syntax
          if jq empty inex-live-data.json 2>/dev/null; then
            echo "✅ JSON syntax is valid"
          else
            echo "❌ JSON syntax error detected"
            exit 1
          fi
        else
          echo "❌ Failed to update inex-live-data.json"
          exit 1
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add inex-live-data.json
        git commit -m "Add new message from ${{ inputs.name }}: ${{ inputs.text }}"
        git push origin main
