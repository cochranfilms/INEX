name: Messages Workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Sender name'
        required: false
        type: string
        default: 'Anonymous'
      text:
        description: 'Message text'
        required: true
        type: string
      email:
        description: 'Sender email'
        required: false
        type: string
      priority:
        description: 'Message priority'
        required: false
        type: string
        default: 'normal'
      category:
        description: 'Message category'
        required: false
        type: string
        default: 'general'

jobs:
  add-message:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Verify jq is available
      run: |
        jq --version
        echo "jq is available for JSON manipulation"
      
    - name: Add new message
      run: |
        # Read existing messages or create empty array
        if [ -f "inex-messages.json" ]; then
          messages=$(cat inex-messages.json)
        else
          messages="[]"
        fi
        
        # Create new message object with proper escaping
        new_message=$(jq -n \
          --arg name "${{ inputs.name }}" \
          --arg text "${{ inputs.text }}" \
          --arg email "${{ inputs.email || '' }}" \
          --arg priority "${{ inputs.priority }}" \
          --arg category "${{ inputs.category }}" \
          --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          '{
            id: ($now | tostring),
            name: $name,
            text: $text,
            email: $email,
            priority: $priority,
            category: $category,
            timestamp: $timestamp,
            status: "new",
            read: false,
            responded: false
          }' --arg now "$(date +%s)000")
        
        # Add new message to beginning of array (newest first) using jq for safe JSON manipulation
        if [ "$messages" = "[]" ]; then
          # First message - create new array
          echo "[$new_message]" > inex-messages.json
        else
          # Insert at beginning of existing array using jq
          echo "$messages" | jq --argjson msg "$new_message" '. |= [$msg] + .' > inex-messages.json
        fi
        
        # Validate the JSON file was created correctly
        if [ -f "inex-messages.json" ]; then
          echo "✅ inex-messages.json created successfully"
          echo "📝 Message count: $(jq 'length' inex-messages.json)"
          echo "📄 File size: $(wc -c < inex-messages.json) bytes"
          
          # Validate JSON syntax
          if jq empty inex-messages.json 2>/dev/null; then
            echo "✅ JSON syntax is valid"
          else
            echo "❌ JSON syntax error detected"
            exit 1
          fi
        else
          echo "❌ Failed to create inex-messages.json"
          exit 1
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add inex-messages.json
        git commit -m "Add new message from ${{ inputs.name }}: ${{ inputs.text }}"
        git push origin main
